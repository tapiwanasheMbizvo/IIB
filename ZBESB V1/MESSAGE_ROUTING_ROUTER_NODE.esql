Path COMMON;

CREATE COMPUTE MODULE MESSAGE_ROUTING_ROUTER_NODE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		 
		 
		SET Environment.ISO.MTI = CAST(InputBody.ns:ISO8583_1993.MTI_MessageClass * 100 + InputBody.ns:ISO8583_1993.MTI_MessageFunction * 10 + InputBody.ns:ISO8583_1993.MTI_MessageOrigin AS CHAR);
		--SET Environment.ISO.MTI = InputBody.ns:ISO8583_1993.MTI_MessageClass || InputBody.ns:ISO8583_1993.MTI_MessageFunction
		SET Environment.ISO.PAN = CAST (LEFT (InputBody.ns:ISO8583_1993.PrimaryAccountNumber_002, 6) AS CHAR);
		SET Environment.ISO.PROCODE = CAST (LEFT (InputBody.ns:ISO8583_1993.ProcessingCode_003, 2) AS CHAR);
		
		CALL addToMQDestinationList(InputLocalEnvironment, 'ISO_LOGGER_IN');
		IF Environment.ISO.PAN =  '41629' THEN 
			CALL addToMQDestinationList(InputLocalEnvironment ,'VISA_IN');
			
		ELSEIF Environment.ISO.PROCODE = '31' THEN
			CALL addToMQDestinationList(InputLocalEnvironment ,'BALANCE_IN');
			
		ELSE
			CALL addToMQDestinationList(InputLocalEnvironment ,'MAIN');					
		END IF;	
					 
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
