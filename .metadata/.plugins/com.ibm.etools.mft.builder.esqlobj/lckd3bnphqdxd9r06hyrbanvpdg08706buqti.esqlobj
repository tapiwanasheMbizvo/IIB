CREATE COMPUTE MODULE EQ_RESP_LOGGER_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		
		
		SET Environment.DB_VALUES.PCREF = CAST (InputBody.TRANSACTIONRSP.TRANSACTION_RSP_HEADER.PCREF AS CHAR);
		SET Environment.DB_VALUES.MSGTYPE = CAST (InputBody.TRANSACTIONRSP.TRANSACTION_RSP_HEADER.MSGTYPE AS CHAR);
		SET Environment.DB_VALUES.GROUPID = Environment.DB_VALUES.MSGTYPE||Environment.DB_VALUES.PCREF;		
		SET Environment.DB_VALUES.ID = THE(SELECT ITEM E.ID FROM Database.ZBDB_ESB.DB2INST1.EQTRANSFER AS E WHERE E.PCREF = Environment.DB_VALUES.PCREF);
		SET Environment.DB_VALUES.IS_REVERSAL = THE(SELECT ITEM E.IS_REVERSED FROM Database.ZBDB_ESB.DB2INST1.EQTRANSFER AS E WHERE E.PCREF = Environment.DB_VALUES.PCREF AND E.IS_REVERSED=2);
		---IS_REVERSED 1 DONE, 0 NOT REVERSED, 2 SEND TO EQ
		SET Environment.DB_VALUES.XRREC =CAST (InputBody.TRANSACTIONRSP.TRANSACTION_RSP_HEADER.XRREC AS CHAR);
		SET Environment.DB_VALUES.MsgTxt =CAST (InputBody.TRANSACTIONRSP.TRANSACTION_RSP_HEADER.MsgTxt AS CHAR);
		SET Environment.DB_VALUES.UserData =CAST (InputBody.TRANSACTIONRSP.TRANSACTION_RSP_HEADER.UserData AS CHAR);
		
		IF Environment.DB_VALUES.ID IS NOT NULL THEN 
			--lets update
			CALL updateEQMessage();
				IF 	Environment.DB_VALUES.IS_REVERSAL IS NOT NULL THEN
			 		IF Environment.DB_VALUES.XRREC = 'R' THEN 
			 		UPDATE Database.ZBDB_ESB.DB2INST1.EQTRANSFER  
	
						SET  IS_REVERSED = 1						 	 
						WHERE EQTRANSFER.ID = Environment.DB_VALUES.ID;	
					END IF;
				END IF;
		ELSE
			--this response has no macthing request 
		END IF ;		

		RETURN TRUE;
	END;


	CREATE PROCEDURE updateEQMessage() BEGIN
		
		
		UPDATE Database.ZBDB_ESB.DB2INST1.EQTRANSFER  
		
		SET  XRREC = Environment.DB_VALUES.XRREC,
		 	 MSGTXT = Environment.DB_VALUES.MsgTxt,
		 	 USERDATA =Environment.DB_VALUES.UserData
		WHERE EQTRANSFER.ID = Environment.DB_VALUES.ID;	
			
		
	END;
	
			
	
END MODULE;