CREATE PROCEDURE getTransactionCode(IN PROCESSINGCODE CHARACTER,  IN CRDR CHARACTER, IN  SOURCE CHARACTER NULLABLE) RETURNS CHARACTER BEGIN

	
 IF TRANSACTION_CODES_CACHE.TRANSACTIONCODE.ID IS NULL THEN
 -- load the cache
  CALL loadCACHE();
  
 
 END IF;
 

IF CRDR = 'CREDITCODE' THEN --CREDIT CODE
	
RETURN THE (SELECT ITEM T.CREDITCODE FROM TRANSACTION_CODES_CACHE.TRANSACTIONCODE[] AS T WHERE T.PROCESSINGCODE = PROCESSINGCODE AND T.SOURCE = SOURCE );	

ELSEIF CRDR = 'DEBITCODE' THEN --DEBIT CODE
	
RETURN THE (SELECT ITEM T.DEBITCODE FROM TRANSACTION_CODES_CACHE.TRANSACTIONCODE[] AS T WHERE T.PROCESSINGCODE = PROCESSINGCODE AND T.SOURCE = SOURCE );

ELSEIF CRDR = 'ADVICECREDITCODE' THEN --ADIVICE CREDIT CODE 
	
RETURN THE (SELECT ITEM T.ADVICECREDITCODE FROM TRANSACTION_CODES_CACHE.TRANSACTIONCODE[] AS T WHERE T.PROCESSINGCODE = PROCESSINGCODE);

ELSEIF CRDR = 'ADVICEDEBITCODE' THEN --ADVICE DEBIT CODE
	
RETURN THE (SELECT ITEM T.ADVICEDEBITCODE FROM TRANSACTION_CODES_CACHE.TRANSACTIONCODE[] AS T WHERE T.PROCESSINGCODE = PROCESSINGCODE);	

ELSEIF CRDR = 'REVERSALCREDITCODE' THEN --REVERSAL CREDIT CODE	
		  
RETURN THE (SELECT ITEM T.REVERSALCREDITCODE FROM TRANSACTION_CODES_CACHE.TRANSACTIONCODE[] AS T WHERE T.PROCESSINGCODE = PROCESSINGCODE  );

ELSEIF CRDR= 'REVERSALDEBITCODE' THEN 
	
RETURN THE (SELECT ITEM T.REVERSALDEBITCODE FROM TRANSACTION_CODES_CACHE.TRANSACTIONCODE[] AS T WHERE T.PROCESSINGCODE = PROCESSINGCODE  );
		
END IF;
 	 

 		
END;