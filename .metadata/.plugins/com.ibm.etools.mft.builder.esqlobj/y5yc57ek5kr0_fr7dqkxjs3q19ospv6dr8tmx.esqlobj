CREATE COMPUTE MODULE PROCESS_OBI_OBI_RULES
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		--tmbizvo @06:24AM 22/04/2020
		
		--DEBIT_CREDIT_INDICATOR filed 07
		DECLARE PCREF CHAR '000000000000000'; -- 15 character unique reference code
		DECLARE TIMESTRING CHAR;
		DECLARE SEED, RNDNUM INT;
		SET TIMESTRING = CAST(CURRENT_TIMESTAMP AS CHAR);
		SET SEED = CAST(SUBSTRING(TIMESTRING FROM 32 FOR 6) AS INT);
		SET RNDNUM = CAST(RAND(SEED) * 1000000000000000 as INT);
		SET PCREF = CAST(RNDNUM AS CHAR);
		
		 SET Environment.OBI.DEBIT_CREDIT_INDICATOR = InputBody.OBIRCTP10.DEBIT_CREDIT_INDICATOR;
		 SET Environment.OBI.BIN_PREFIX = LEFT (InputBody.OBIRCTP10.ACCOUNT_NUMBER,9); -- need clarity on default bin prefixes 
		 SET Environment.OBI.FEECODE = InputBody.OBIRCTP10.FRONT_END_TRANSACTION_TYPE;
		 SET Environment.OBI.AMOUNT = InputBody.OBIRCTP10.AMOUNT;		
		 SET Environment.OBI.CURRENCY_CODE = InputBody.OBIRCTP10.CURRENCY_CODE;
		 SET Environment.OBI.GZNR1 = InputBody.OBIRCTP10.ISO_TERMINAL_ID || InputBody.OBIRCTP10.ACQUIRER_BIN;
		 SET Environment.OBI.GZNR2 = InputBody.OBIRCTP10.TRANSACTION_PLACE;
		 SET Environment.OBI.GZNR3 = InputBody.OBIRCTP10.OPTIONAL_4;
		 SET Environment.OBI.GZNR4  = InputBody.OBIRCTP10.REFERENCE_REF || InputBody.OBIRCTP10.TRANSACTIONS_GROUP_ID;
		 --SET Environment.OBI.PCREF = PCREF;
		 SET Environment.OBI.PCREF = RIGHT (InputBody.OBIRCTP10.REFERENCE_REF, 15);
		 SET Environment.OBI.DATE = LEFT (InputBody.OBIRCTP10.OPTIONAL_4, 8);
		 SET Environment.OBI.DATE =RIGHT(Environment.OBI.DATE, 7);
		 SET Environment.OBI.RETRIEVAL_REFERENCE_NUMBER = InputBody.OBIRCTP10.RETRIEVAL_REFERENCE_NUMBER;
		 SET Environment.OBI.ACQUIRER_BIN= InputBody.OBIRCTP10.ACQUIRER_BIN;
		 SET Environment.OBI.CHARGECODE = InputBody.OBIRCTP10.FRONT_END_TRANSACTION_TYPE;
		 SET Environment.OBI.ISO_TERMINAL_ID = InputBody.OBIRCTP10.ISO_TERMINAL_ID;				
		 SET Environment.OBI.IS_BULKED = THE(SELECT ITEM O.IS_BULKED FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.CHARGECODE =  Environment.OBI.CHARGECODE);
		
		
		--Get OBI Gl using Bin Prefix, Charge Code and Charge Type indicator i.e. Debit or credit.
		
		SET Environment.OBI.GL = THE (SELECT ITEM O.GLACCOUNT FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.CHARGECODE =  Environment.OBI.CHARGECODE AND O.DRCR=Environment.OBI.DEBIT_CREDIT_INDICATOR AND O.BINPRIFIX =Environment.OBI.BIN_PREFIX);
		IF Environment.OBI.GL IS NULL THEN 
			SET Environment.OBI.GL = THE (SELECT ITEM O.GLACCOUNT FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.CHARGECODE =  Environment.OBI.CHARGECODE AND O.DRCR=Environment.OBI.DEBIT_CREDIT_INDICATOR);
		END IF ;
		
		--NOW WE HAVE THE OBI GL LETS FIND ACCOUNTS AS PER GL 
		
		 IF Environment.OBI.GL = 'SOURCEACCOUNT' THEN -- debit source account and credit  ACQUIRER POS ACCOUNT
		 	SET Environment.OBI.CREDITACC = THE (SELECT ITEM A.POSACCOUNT FROM Database.ZBDB_ESB.DB2INST1.ACQUIRER AS A WHERE A.ID =Environment.OBI.ACQUIRER_BIN ); --Acquirer POS Account		 	
		 	SET Environment.OBI.DEBITACC = InputBody.OBIRCTP10.ACCOUNT_NUMBER;
		 END IF;
		 
		 IF Environment.OBI.GL = 'TERMINALACC' THEN --DEBIT TERMINAL ACCOUNT NUMBER , to get credit account logic
		 	SET Environment.OBI.CREDITACC = THE (SELECT ITEM A.POSACCOUNT FROM Database.ZBDB_ESB.DB2INST1.ACQUIRER AS A WHERE A.ID = Environment.OBI.ACQUIRER_BIN ); 	 	
		 	SET Environment.OBI.DEBITACC = THE (SELECT ITEM T.ACCOUNTNO FROM Database.ZBDB_ESB.DB2INST1.TERMINAL AS T  WHERE T.TERMINALID = Environment.OBI.ISO_TERMINAL_ID );
		 END IF; 
		 
		 
		 IF Environment.OBI.GL = 'ACQUIRERPOS' THEN --DEBIT ACQUIRER POS ACCOUNT  , to get credit account logic
		 	SET Environment.OBI.CREDITACC = THE (SELECT ITEM A.POSACCOUNT FROM Database.ZBDB_ESB.DB2INST1.ACQUIRER AS A WHERE A.ID = Environment.OBI.ACQUIRER_BIN ); 		 	
		 	SET Environment.OBI.DEBITACC = THE (SELECT ITEM A.POSACCOUNT FROM Database.ZBDB_ESB.DB2INST1.ACQUIRER AS A WHERE A.ID =Environment.OBI.ACQUIRER_BIN );
		 END IF;
		 
		 IF Environment.OBI.GL = 'ACQUIRERACC' THEN --DEBIT Acquirer Account POS or ATM  , to get credit account logic
		 	SET Environment.OBI.CREDITACC = THE (SELECT ITEM A.POSACCOUNT FROM Database.ZBDB_ESB.DB2INST1.ACQUIRER AS A WHERE A.ID = Environment.OBI.ACQUIRER_BIN ); 		 	
		 	SET Environment.OBI.DEBITACC = THE (SELECT ITEM A.POSACCOUNT FROM Database.ZBDB_ESB.DB2INST1.ACQUIRER AS A WHERE A.ID =Environment.OBI.ACQUIRER_BIN );
		 END IF; 
		 
		  
		 
		 IF Environment.OBI.GL = 'ACQUIRERATM' THEN --DEBIT Acquirer Account  ATM  , to get credit account logic
		 	SET Environment.OBI.CREDITACC = THE (SELECT ITEM A.POSACCOUNT FROM Database.ZBDB_ESB.DB2INST1.ACQUIRER AS A WHERE A.ID = Environment.OBI.ACQUIRER_BIN ); 		 	
		 	SET Environment.OBI.DEBITACC = THE (SELECT ITEM A.ATMACCOUNT FROM Database.ZBDB_ESB.DB2INST1.ACQUIRER AS A WHERE A.ID =Environment.OBI.ACQUIRER_BIN );
		 END IF; 
		 ---
		 
		 SET Environment.OBI.CREDITCODE =THE(SELECT ITEM O.CREDITCODE FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.BINPRIFIX =Environment.OBI.BIN_PREFIX AND O.CHARGECODE =Environment.OBI.FEECODE);
		 IF Environment.OBI.CREDITCODE IS NULL THEN
		 	 SET Environment.OBI.CREDITCODE =THE(SELECT ITEM O.CREDITCODE FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.BINPRIFIX ='DEFAULT' AND O.CHARGECODE =Environment.OBI.FEECODE);
		 END IF;
		 
			 
		 
		 
		 SET Environment.OBI.DEBITCODE =THE(SELECT ITEM O.DEBITCODE FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.BINPRIFIX =Environment.OBI.BIN_PREFIX AND O.CHARGECODE =Environment.OBI.FEECODE);
		 
		 IF Environment.OBI.DEBITCODE IS NULL THEN
		 	SET Environment.OBI.DEBITCODE =THE(SELECT ITEM O.DEBITCODE FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.BINPRIFIX ='DEFAULT' AND O.CHARGECODE =Environment.OBI.FEECODE);
		 END IF;
		 
--		 IF Environment.OBI.DEBIT_CREDIT_INDICATOR = 'CR' THEN
--		 	
--		 SET Environment.OBI.CREDITACC = InputBody.OBIRCTP10.ACCOUNT_NUMBER;
--		 
--		 SET Environment.OBI.DEBITACC =THE(SELECT ITEM O.GLACCOUNT FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.BINPRIFIX =Environment.OBI.BIN_PREFIX AND O.CHARGECODE =Environment.OBI.FEECODE AND O.DEBITCODE =Environment.OBI.DEBITCODE);
--		 
--		 	IF Environment.OBI.DEBITACC IS NULL THEN 
--		 		SET Environment.OBI.DEBITACC =THE(SELECT ITEM O.GLACCOUNT FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.BINPRIFIX ='DEFAULT' AND O.CHARGECODE =Environment.OBI.FEECODE AND O.DEBITCODE =Environment.OBI.DEBITCODE);	
--		 	END IF ;
--		 	
--		 ELSE
--		 	-- select DebitCode from OBICHARGE where BINPRFIX and FEECODE is 19 field 19  BINPRIFIX, CHARGECODE,CREDITCODE
--		 	SET Environment.OBI.CREDITACC =THE(SELECT ITEM O.GLACCOUNT FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.BINPRIFIX =Environment.OBI.BIN_PREFIX AND O.CHARGECODE =Environment.OBI.FEECODE AND O.CREDITCODE =Environment.OBI.CREDITCODE);
--		 	
--		 	IF Environment.OBI.CREDITACC IS NULL THEN
--		 		SET Environment.OBI.CREDITACC =THE(SELECT ITEM O.GLACCOUNT FROM Database.ZBDB_ESB.DB2INST1.OBICHARGE AS O WHERE O.BINPRIFIX ='DEFAULT' AND O.CHARGECODE =Environment.OBI.FEECODE AND O.CREDITCODE =Environment.OBI.CREDITCODE);	 
--		 	END IF;
--		 	
--		 	SET Environment.OBI.DEBITACC = InputBody.OBIRCTP10.ACCOUNT_NUMBER;
--		 	
--		 END IF;
		 	 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;