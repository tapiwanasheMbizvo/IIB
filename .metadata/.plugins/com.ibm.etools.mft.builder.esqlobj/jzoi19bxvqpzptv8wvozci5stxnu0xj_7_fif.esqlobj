CREATE COMPUTE MODULE EQ_LOG_OFFLINE_REQ_DO_LOGGING
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		--EXTRACT PCREF TO SEE IF THE MESSAGE HAS BEEN SAVED BEFORE
		SET Environment.DB_VALUES.PCREF = CAST (InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.PCREF AS CHAR);
		SET Environment.DB_VALUES.MSGTYPE = CAST ( InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.MSGTYPE AS CHAR);
		SET Environment.DB_VALUES.ID = Environment.DB_VALUES.MSGTYPE||Environment.DB_VALUES.PCREF;
		
	
		SET Environment.DB_VALUES.var = THE(SELECT ITEM E.PCREF FROM Database.ZBDB_ESB.DB2INST1.EQTRANSFER_OFFLINE AS E WHERE E.PCREF = Environment.DB_VALUES.PCREF);
		
		
		IF Environment.DB_VALUES.var IS NULL THEN
			--do the save
			CALL saveEQRequest();
			CALL flagRCPTMessae();
		ELSE
			--update the record
				
		END IF;
			
		RETURN TRUE;
	END;


	CREATE PROCEDURE flagRCPTMessae() BEGIN
		UPDATE Database.ZBDB_ESB.DB2INST1.RCPT101  
		
		SET  SEND_TO_EQ = 1
		 	 
		WHERE right (RCPT101.REFERENCE_REF, 15) = Environment.DB_VALUES.PCREF;	
		
		END;

	CREATE PROCEDURE saveEQRequest() BEGIN
		
	
	INSERT INTO Database.ZBDB_ESB.DB2INST1.EQTRANSFER_OFFLINE(
		
		GZAB1,
		GZAB2 ,
		GZAMA1 ,
		GZAMA2 ,
		GZAN1 ,
		GZAN2 ,
		GZAS1 ,
		GZAS2 ,
		GZBRNM ,
		GZCCY1 ,
		GZCCY2 ,
		GZDRF1 ,
		GZDRF2 ,
		GZEXRH ,
		GZNR1 ,
		GZNR2 ,
		GZNR3 ,
		GZNR4 ,
		GZNR5 ,
		GZNR6 ,
		GZNR7 ,
		GZNR8 ,
		GZPBR ,
		GZPSQ7 ,
		GZQEVM ,
		GZREF ,
		GZTCD1 ,
		GZTCD2 ,
		GZTREF ,
		GZVFR1 ,
		GZVFR2 ,
		CHARGE,
		DATERECEIVED,
		GROUPREFERENCE ,
		NARRATIVE ,
		RESPONSECODE ,
		REVERSALTCD1 ,
		REVERSALTCD2 ,
		BRNM ,
		FORMAT ,
		JTT ,
		MAPLOCN ,
		MSGTYPE ,
		NMSGS ,
		ORIGIN ,
		ORIGTYPE ,
		PASSWORD ,
		REPLY ,
		REPLYMSG ,
		RESPMODE ,
		RPGM ,
		RPYQUEUE ,
		SPAREA ,
		SPAREB ,
		SRCSYS ,
		TGTSYS ,
		TRANSQ ,
		TSTAMP ,
		USER ,
		USID ,
		VERSION ,
		WARNS ,
		WSID ,
		DRV ,
		GZIEA ,
		PICKED ,
		PCREF
		
		)VALUES(
		
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZAB1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZAB2,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZAMA1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZAMA2,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZAN1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZAN2,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZAS1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZAS2,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZBRNM,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZCCY1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZCCY2,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZDRF1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZDRF2,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZEXRH,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZNR1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZNR2,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZNR3,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZNR4,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZNR5,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZNR6,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZNR7,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZNR8,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZPBR,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZPSQ7,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZQEVM,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZREF,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZTCD1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZTCD2,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZTREF,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZVFR1,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZVFR2,
		'1',
		'2018-11-13 15:10:14',
		'3',
		'4',
		'5',
		'6',
		'7',
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.BRNM,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.FORMAT,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.JTT,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.MAPLOCN,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.MSGTYPE,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.NMSGS,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.ORIGIN,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.ORIGTYPE,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.PASSWRD,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.REPLY,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.REPLYMSG,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.RESPMODE,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.RPGM,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.RPYQUEUE,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.SPAREA,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.SPAREB,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.SRCSYS,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.TGTSYS,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.TRANSQ,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.TSTAMP,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.USER,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.USID,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.VERSION,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.WARNS,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.WSID,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.DRV,
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_BODY.GZIEA,
		'1',
		InputBody.TRANSACTIONREQ.TRANSACTION_REQ_HEADER.PCREF
		);	
		
	END;
		 
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;