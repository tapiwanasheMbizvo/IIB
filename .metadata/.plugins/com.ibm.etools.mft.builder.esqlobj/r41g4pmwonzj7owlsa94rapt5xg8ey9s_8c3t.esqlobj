/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- CALL CopyMessageHeaders();
		
--GZBBN	Branch number	4	String	First 4 digits of the account number
--GZBNO	Customer number	6	String	Middle 6 digits of the account number
--GZSFX	Account suffix	3	String	Last 3 digits of the account number
--GZCUS	Customer mnemonic	6		Put Space of size 6
--GZCLC	Customer location	3	String	Put Space of size 3
--GZBRNM	Branch mnemonic	4		Posting Branch
--GZACO	Responsibility code	3		AA0
--GZHRC	Hold reason code	3		PTR
--GZHDD1	Hold description line1	35		Retrieval Reference
--GZHDD2	Hold description line2	35		Space of size 35
--GZHDD3	Hold description line3	35		Space of size 35
--GZHDD4	Hold description line4	35		Space of size 35
--GZSTD	Start date	7		Value Date
--GZEXD	Expiry date	7		Value Date + expiry period days e.g 21 days
--GZAMTH	Hold amount	15		from ISO8583 Field 5
--GZCCY	Currency mnemonic	3		Currency from ISO8583
--GZHNO	Hold number	3		Put Space of size 3
--GZINP	Input date	7		Value Date
--GZDLM	Date last maintained	7		Value Date + expiry period days e.g 21 days
--RPYQUEUE

		
		 CALL CopyEntireMessage();
		 
		DECLARE  pcref, ApprovalCode_038, DEBITACC, CREDITACC CHARACTER;
		CALL createPCREF(pcref);
		SET  Environment.ISO.PCREF = pcref;
		
		SET Environment.ISO.Field041 = InputBody.ns:ISO8583_1993.CardAcceptorTerminalIdentification_041;
		SET Environment.ISO.AccountIdentification1_102 = InputBody.ns:ISO8583_1993.AccountIdentification1_102;
		
		SET Environment.ISO.RetrievalReferenceNumber_037 = InputBody.ns:ISO8583_1993.RetrievalReferenceNumber_037;
		
		
		 
		
		SET Environment.ISO.MTI = CAST(InputBody.ns:ISO8583_1993.MTI_MessageClass * 100 + InputBody.ns:ISO8583_1993.MTI_MessageFunction * 10 + InputBody.ns:ISO8583_1993.MTI_MessageOrigin AS CHAR);
		SET Environment.HOLD.GZBRNM = 'TEST';
		SET Environment.HOLD.RPYQUEUE = 'TEST'; 
		--SET Environment.HOLD.Amount = '';
		SET Environment.HOLD.Acquirer = '1';
		SET Environment.HOLD.Amount =InputBody.ns:ISO8583_1993.AmountReconciliation_005;
		IF (Environment.HOLD.Amount IS NULL) THEN 
			SET Environment.HOLD.Amount = InputBody.ns:ISO8583_1993.AmountTransaction_004;
		END IF;	
		
		 
		RETURN TRUE;
	END;
	
	
	
	

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
