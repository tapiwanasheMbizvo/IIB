CREATE COMPUTE MODULE REVERSAL_OUT_LOGGER_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		
		SET Environment.DB_VALUES.STATUS = InputBody.ns:ISO8583_1993.ActionCode_039;
		SET Environment.DB_VALUES.REF = CAST (InputBody.ns:ISO8583_1993.RetrievalReferenceNumber_037 AS CHAR); 
		SET Environment.DB_VALUES.MTI = CAST(InputBody.ns:ISO8583_1993.MTI_MessageClass * 100 + InputBody.ns:ISO8583_1993.MTI_MessageFunction * 10 + InputBody.ns:ISO8583_1993.MTI_MessageOrigin AS CHAR);
		
		--SET Environment.DB_VALUES.MTI = RIGHT(Environment.DB_VALUES.MTI, 3);
		SET Environment.DB_VALUES.GROUPID = Environment.DB_VALUES.MTI||Environment.DB_VALUES.REF;
		--SET Environment.DB_VALUES.ISOG = STARTSWITH('Hello World!', 'Hello');
		--take 
		
		 SET Environment.DB_VALUES.ID  = THE(SELECT ITEM T.ID FROM Database.ZBDB_ESB.DB2INST1.REVERSALS AS T WHERE T.RETRIEVALREFERENCENUMBER = Environment.DB_VALUES.REF);
		  
			IF Environment.DB_VALUES.ID IS  NOT NULL THEN
			
			UPDATE Database.ZBDB_ESB.DB2INST1.REVERSALS  
			SET  ACTIONCODE = Environment.DB_VALUES.STATUS 
			WHERE REVERSALS.RETRIEVALREFERENCENUMBER = Environment.DB_VALUES.REF AND REVERSALS.ID =Environment.DB_VALUES.ID;
			 		
				
			END IF;		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;